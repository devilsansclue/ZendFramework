<?xml version="1.0" encoding="UTF-8"?>
<!-- Reviewed: no -->
<sect1 id="learning.lucene.searching">
    <title>Searching</title>

    <para>
        Searching is performed by <methodname>find()</methodname> method:
    </para>

    <example id="learning.lucene.searching.search-example">
        <title>Searching through the index</title>

        <programlisting language="php"><![CDATA[
$hits = $index->find($query);

foreach ($hits as $hit) {
    printf(“%d %f %s\n”, $hit->id, $hit->score, $hit->title);
}
]]></programlisting>
    </example>

    <para>
        This example demonstrates usage of two special search hit properties - 'id' and 'score'.
    </para>
    
    <para>
        'id' is an internal document id used within Lucene index. It may be used for deleting 
        document:
    </para>

    <example id="learning.lucene.searching.delete-example">
        <title>Deleting document</title>

        <programlisting language="php"><![CDATA[
$index->delete($id);
]]></programlisting>
    </example>

    <para>
        or retrieving document from the index:
    </para>

    <example id="learning.lucene.searching.retrieve-example">
        <title>Retrieving document</title>

        <programlisting language="php"><![CDATA[
$doc = $index->getDocument($id);
]]></programlisting>
    </example>

    <note>
        <title>Internal document IDs</title>

        <para>
            Important note! Internal document id may be changed by index optimization or 
            auto-optimization process, but it's never changed within script execution up to 
            the <methodname>addDocument()</methodname> (which may involve auto-optimization
            procedure) or <methodname>optimize()</methodname> calls.
        </para>
    </note>
    
    <para>
        'score' field is a hit score. Search result is ordered by score by default (best 
        results returned first).
    </para>
    
    <para>
        It's also possible to order result set by field values. See 
        <ulink href="http://framework.zend.com/manual/en/zend.search.lucene.searching.html#zend.search.lucene.searching.sorting">
        Zend_Search_Lucene documentation</ulink> for more details about this possibility.
    </para>
        
    <para>
        Given example also demonstrates an ability to access to stored fields ($hit->title). 
        At the first access to any hit property non-equal to 'id' or 'score', document stored 
        fields are loaded and corresponding field value is returned.
    </para>
        
    <para>
        That causes an ambiguity for documents having its own 'id' or 'score' fields. So it's 
        not recommended to use these field names. Nevertheless, they still can be accessed with 
        <methodname>getDocument()</methodname> method:
    </para>

    <example id="learning.lucene.searching.id-score-fields">
        <title>Accessing to the original document 'id' and 'score' fields</title>

        <programlisting language="php"><![CDATA[
$id = $hit->getDocument()->id;
$score = $hit->getDocument()->score;
]]></programlisting>
    </example>
</sect1>
